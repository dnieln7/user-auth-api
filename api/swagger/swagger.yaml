swagger: '2.0'
info:
  version: '2.0.0'
  title: road-watchman-api-2

host: localhost:10010

# Cors config

x-google-endpoints:
  - name: 'localhost:10010'
    allowCors: 'true'

# Security

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and retourned as answer of a call
      to the route /login giving a valid user & password.


      The following syntax must be used in the 'Authorization' header :

          Bearer xxxxxx.yyyyyyy.zzzzzz

# Paths

basePath: /

schemes: [ http, https ]

consumes:
  - application/json
produces:
  - application/json

paths:

  /login:
    x-swagger-router-controller: auth.controller

    post:
      operationId: login
      description: Login with a particular role
      parameters:
        - name: type
          in: query
          type: string
          required: true
        - name: authentication
          in: body
          required: true
          schema:
            $ref: '#/definitions/Authentication'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginResponse'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Invalid password
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /sign-up:
    x-swagger-router-controller: auth.controller

    post:
      operationId: register
      description: Create a new user
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
            
  /sign-up-google:
    x-swagger-router-controller: auth.controller

    post:
      operationId: registerGoogle
      description: Create a new user with google
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /user/{id}:
    x-swagger-router-controller: user.controller

    put:
      operationId: updateUser
      description: Update user information
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      operationId: deleteUser
      description: Delete user
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /reports/user/{id}:
    x-swagger-router-controller: report.controller

    get:
      operationId: getReports
      description: Returns all reports
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ReportsResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
            
  /reports:
    x-swagger-router-controller: report.controller

    post:
      operationId: postReport
      description: Save a new report
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: report
          in: body
          required: true
          schema:
            $ref: '#/definitions/Report'
      responses:
        '201':
          description: success
          schema:
            $ref: '#/definitions/ReportResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /reports/{id}:
    x-swagger-router-controller: report.controller

    get:
      operationId: getReportById
      description: Returns a report that matches the provided id
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/ReportResponse"
        '404':
          description: Report not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      operationId: updateReport
      description: Update report information
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: report
          in: body
          required: true
          schema:
            $ref: '#/definitions/Report'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ReportResponse'
        '404':
          description: Report not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      operationId: deleteReport
      description: Delete report
      security:
        - Bearer: [ ]
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
        '404':
          description: Report not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /swagger:
    x-swagger-pipe: swagger_raw

definitions:

  # Responses

  ErrorResponse:
    type: object
    properties:
      message:
        type: string
      description:
        type: string

  DeleteResponse:
    type: object
    properties:
      successful:
        type: boolean
      message:
        type: string
      id:
        type: integer

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserResponse:
    type: object
    properties:
      successful:
        type: boolean
      user:
        $ref: '#/definitions/User'

  ReportResponse:
    type: object
    properties:
      successful:
        type: boolean
      created:
        $ref: '#/definitions/Report'

  ReportsResponse:
    properties:
      reports:
        type: array
        items:
          $ref: '#/definitions/Report'

  # Data objects

  Authentication:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
    required:
      - email
      - password
      - role

  User:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
        minLength: 1
        maxLength: 1
      email:
        type: string
      google_id:
        type: string
      password:
        type: string
      role:
        type: string
    required:
      - type
      - email
      - role

  Report:
    type: object
    properties:
      id:
        type: integer
      creator_id:
        type: integer
      description:
        type: string
      date:
        type: string
      picture:
        type: string
      location:
        type: array
        items:
          type: number
          format: float
      location_description:
        type: string
      resolved:
        type: boolean
    required:
      - creator_id
      - description
      - date
      - location
      - location_description
      - resolved